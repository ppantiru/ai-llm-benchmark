{
  "id": "qa_006",
  "prompt": "Can I customize the user profile fields that are populated from the OpenID Connect provider in XWiki?\nI want to map additional user profile fields from my OpenID Connect provider to XWiki user properties. How can I achieve this?",
  "expected_answer": "Yes, you can customize the user profile fields that are populated from the OpenID Connect provider by mapping them in the `xwiki.properties` file.\n\nTo map additional user profile fields, use the `oidc.user.mapping` property. Here's an example of how to map custom properties:\n\n```\n# oidc.user.mapping=myxproperty1=${oidc.user.subject}\n# oidc.user.mapping=myxproperty2=myprefix-${oidc.user.subject}\n```\n\nReplace `myxproperty1` and `myxproperty2` with the actual XWiki user property names, and `${oidc.user.subject}` with the appropriate variable based on the data provided by your OpenID Connect provider.\n\nAfter configuring the mappings, save the `xwiki.properties` file and restart XWiki to apply the changes.",
  "ai_answer": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/ \n\n\nYes, you can customize the user profile fields that are populated from the OpenID Connect provider in XWiki by mapping additional user profile fields. Here's how you can achieve this:\n\n1. Define the mapping in the XWiki configuration:\n   - You can associate non-standard properties coming from the OpenID Connect provider with XWiki user properties by defining a mapping in the XWiki configuration. This mapping is a map with the name of the XWiki user property and a format similar to the one defined in the configuration.\n\n2. Example of how to define the mapping:\n   ```\n   oidc.user.mapping=myxproperty1=${oidc.user.subject}\n   oidc.user.mapping=myxproperty2=myprefix-${oidc.user.subject}\n   ```\n\n3. By setting up these mappings, you can map additional user profile fields from your OpenID Connect provider to XWiki user properties. This allows you to customize the user profile fields that are populated in XWiki based on the information provided by the OpenID Connect provider.\n\nIf you need further assistance or have more questions regarding this customization, feel free to ask!",
  "sources": [
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "\"oidc.user.nameFormater=${oidc.issuer.host.\\\\_clean}-${oidc.user.preferredUsername.\\\\_clean}  \\n  \\n#-# The pattern to use to generate the unique identifier of the user in the OpenId Connect provider.  \\n#-# It is used to avoid collisions with user have similar name.  \\n#-#\u00a0  \\n#-# The syntax is the same than the one described for oidc.user.nameFormater property.  \\n#-#\u00a0  \\n#-# The default is:\u00a0  \\n# oidc.user.subjectFormater=${oidc.user.subject}  \\n  \\n#-# It&#x27;s possible to associate non standard properties coming from the OpenID Connect provider with the XWiki user.  \\n#-# It&#x27;s a map with the name of the XWiki user property and a format similar to the one defined in oidc.user.nameFormater for the OpenID Connect side.  \\n#-#\u00a0  \\n# oidc.user.mapping=myxproperty1=${oidc.user.subject}  \\n# oidc.user.mapping=myxproperty2=myprefix-${oidc.user.subject}  \\n  \\n#-# The righs each new user should have on its own profile as a comma (only comma, no white space allowed) separated list. Setting a right also \"",
      "similarity_score": 0.850466251373291,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "\"view/Extension/Observation%20Module%20Local) and be notified during user profile update to add more to this process or do other things after it:\\n\\n* org.xwiki.contrib.oidc.event.OIDCUserUpdating to modify the user profile before it being saved\\n* org.xwiki.contrib.oidc.event.OIDCUserUpdated to do something after the user profile has been saved\\n\\n# Troubleshooting\\n\\n## Enable DEBUG log\\n\\nSee [Logging Admin Guide](https://xwiki.org/xwiki/bin/view/Documentation/AdminGuide/Logging).\\n\\nThe specific packages to track for OpenID Connect module is org.xwiki.contrib.oidc. There is several ways to enable debug log.\\n\\n### With the Logging Admin UI\\n\\nUse [Logging Admin UI](https://extensions.xwiki.org/xwiki/bin/view/Extension/Logging%20Application) from the Administration section, add set TRACE or DEBUG level classes located in package org.xwiki.contrib.oidc.\\n\\nAnything you set trough the Logging Administration won&#x27;t be remembered after a restart.\\n\\n### With the Logback configuration file\\n\\nYou need to \"",
      "similarity_score": 0.828315258026123,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "\"point even when the user is not present (not logged in).  \\n#-#\u00a0  \\n#-# But depending on the provider more can be listed.  \\n#-#\u00a0  \\n#-# The default is:  \\n# oidc.scope=openid,profile,email,address,phone  \\n  \\n#-# The response type to control the flow used by the OpenId Connect protocol.  \\n#-# This is often used to control if the information about the user should  \\n#-# be gathered from the userinfo endpoint with a request from XWiki to the provider (&quot;code&quot;, the default)  \\n#-# or the id token directly provided when the provider redirects to XWiki (&quot;id\\\\_token&quot;)  \\n#-# but it&#x27;s also possible to combine.  \\n#-# See https://openid.net/specs/openid-connect-core-1\\\\_0.html#rfc.section.3 for mode details.  \\n#-# For an hybrid flow, use list syntax (so comma or several set) instead of the white space  \\n#-# documented in the specification to separate words.  \\n#-#  \\n#-# The default is:  \\n# oidc.responseType=code  \\n  \\n#-# The method used to access the userinfo endpoint.  \\n#-#\u00a0  \\n#-#\"",
      "similarity_score": 0.8172166347503662,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "\"rovider  \\n  \\n#-# Define if user accounts should be enabled (marked as active) on first login  \\n#-#  \\n# oidc.enableUser=true  \\n  \\n#-# Disable the OpenId Connect authenticator  \\n#-#\u00a0  \\n#-# The default is:  \\n# oidc.skipped=false## In-wiki configuration\\n\\nXWiki 1.30+ The OIDC authenticator can be configured in XWiki, and to rely on multiple configurations which get selected through a user cookie.\\n\\nIn order to use the in-wiki configuration of the OIDC authenticator, you will still need to define the configuration key xwiki.authentication.authclass in xwiki.cfg. Once the OIDC Authenticator installed, you will be able to define new OIDC Client configurations through objects of class XWiki.OIDC.ClientConfigurationClass.\\n\\nThe property &quot;Configuration name&quot; of the object will define the name of the OIDC configuration being declared. Use default for the default OIDC configuration. The other properties are similar to the properties defined in xwiki.properties. Use the key oidc.defaultClien\"",
      "similarity_score": 0.8061269521713257,
      "vector": null
    },
    {
      "collection_id": "Eval",
      "document_id": "extensions:Extension.OpenID Connect.OpenID Connect Authenticator.WebHome",
      "url": "https://extensions.xwiki.org/xwiki/bin/view/Extension/OpenID%20Connect/OpenID%20Connect%20Authenticator/",
      "content": "\"up synchronization&quot; section for more details)  \\n#-# xwiki\\\\_user\\\\_&lt;fieldname&gt;: the suffix to use to request any field in the user profile document (generally when the provider is XWiki)\u00a0  \\n#-# The default is:  \\n# oidc.userinfoclaims=xwiki\\\\_user\\\\_accessibility,xwiki\\\\_user\\\\_company,xwiki\\\\_user\\\\_displayHiddenDocuments,xwiki\\\\_user\\\\_editor,xwiki\\\\_user\\\\_usertype  \\n  \\n#-# The time after which the user information should be refreshed (in milliseconds)  \\n#-#\u00a0  \\n#-# The default is:  \\n# oidc.userinforefreshrate=600000  \\n  \\n#-# The client identifier used by the authentication.  \\n#-# The default is the identifier of the XWiki instance.  \\n# oidc.clientid=  \\n  \\n#-# The client secret (optionally) registered on the provider.  \\n#-# By default nothing is sent to the provider.  \\n# oidc.secret=  \\n  \\n#-# How to send the client id and secret.  \\n#-#\u00a0  \\n#-# Supported values are:  \\n#-# \\\\* client\\\\_secret\\\\_basic: the id and the secret are sent using BASIC auth header  \\n#-# \\\\* client\\\\_secret\\\\_post: the i\"",
      "similarity_score": 0.8017807602882385,
      "vector": null
    }
  ]
}